@using System.Linq;
@using AutoRest.Core.Utilities
@using AutoRest.ObjectiveC
@using AutoRest.ObjectiveC.Model
@inherits AutoRest.Core.Template<AutoRest.ObjectiveC.Model.MethodOc>
/**
@if (!string.IsNullOrEmpty(Model.Summary))
{
    @: * @Model.Summary.Period()
}
@if (!string.IsNullOrEmpty(Model.Description))
{
    @: * @Model.Description.Period()
}
*
@foreach (var param in Model.LocalParameters.Where(p => !p.IsConstant))
{
    @: * body parameter: @param.Name @(param.Documentation.Else("the " + param.ModelType.Name + " value"))
}
*/
@if (string.IsNullOrEmpty(Model.Group))
{
@:- (void) test_@(Model.Name) {

    @:XCTestExpectation *waitingLoading = [self expectationWithDescription:@@"Wait for HTTP request to complete"];

    foreach (var param in Model.LocalParameters)
    {
    @:@(param.ClientType.Name)* @(param.Name) = @(param.ClientType.GetDefaultValue(Model) ?? "nil");
    }
    
@*     @:@(Model.MethodBodyParameterCreationTestCase) *@

    @:[self.service @(Model.Name)@(Model.MethodParameterInvocationTestCase) {
        
        @:[waitingLoading fulfill];
        @://XCTAssertNil(error, @@"%@@", error.reason);
        
    @:}];
    
    @:[self waitForExpectationsWithTimeout:100 handler:^(NSError *error) {
        @:if (error) {XCTFail(@@"After block was not called.");}
    @:}];
@:}
}
else
{
@:- (void) test_@(Model.MethodGroup.Name)_@(Model.Name) {

    @:XCTestExpectation *waitingLoading = [self expectationWithDescription:@@"Wait for HTTP request to complete"];
    
    @:id<@(Model.Group)Protocol> op =[self.service @(Model.MethodGroup.Name)];
    
    @:@(Model.MethodBodyParameterCreationTestCase)

    @:[op @(Model.Name)@(Model.MethodParameterInvocationTestCase) {
        
        @:[waitingLoading fulfill];
        @://XCTAssertNil(error, @@"%@@", error.reason);
        
    @:}];
    
    @:[self waitForExpectationsWithTimeout:100 handler:^(NSError *error) {
        @:if (error) {XCTFail(@@"After block was not called.");}
    @:}];
@:}
}