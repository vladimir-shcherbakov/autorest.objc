@using System.Linq;
@using AutoRest.Core.Utilities
@using AutoRest.ObjectiveC
@using AutoRest.ObjectiveC.Model
@inherits AutoRest.Core.Template<AutoRest.ObjectiveC.Model.MethodOc>
/**
@if (!string.IsNullOrEmpty(Model.Summary))
{
@: * @Model.Summary.EscapeXmlComment().Period()
}
@if (!string.IsNullOrEmpty(Model.Description))
{
@: * @Model.Description.EscapeXmlComment().Period()
}
 *
@foreach (var param in Model.LocalParameters.Where(p => !p.IsConstant))
{
@: * @@param @param.Name @(param.Documentation.Else("the " + param.ModelType.Name + " value").EscapeXmlComment())
}
 */
- (void) test_@(Model.MethodGroup.Name)_@(Model.Name) {

    XCTestExpectation *waitingLoading = [self expectationWithDescription:@@"Wait for HTTP request to complete"];
    
    id<@(Model.Group)Protocol> op =[self.service @(Model.MethodGroup.Name)];
    
    @(Model.MethodBodyParameterCreationTestCase)

    [op @(Model.Name)@(Model.MethodParameterInvocationTestCase) {
        
        [waitingLoading fulfill];
        //XCTAssertNil(error, @@"%@@", error.reason);
        
    }];
    
    [self waitForExpectationsWithTimeout:100 handler:^(NSError *error) {
        if (error) {XCTFail(@@"After block was not called.");}
    }];
}