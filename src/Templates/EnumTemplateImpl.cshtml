@using System.Linq
@using AutoRest.ObjectiveC
@inherits AutoRest.Core.Template<AutoRest.ObjectiveC.Model.EnumTypeOc>
/**
@Header(" * ").TrimMultilineHeader()
 */
@EmptyLine

/**
 * Defines values for @(Model.Name).
 */
@if (!Model.ModelAsString)
{
@:@@implementation @(Model.Name)
@EmptyLine
for (var i = 0; i < Model.Values.Count; i++)
{
    @:/** @((Model.Values[i].Description != null ? Model.Values[i].Description.TrimEnd(new char[] {'.'}) : "Enum value " + Model.Values[i].SerializedName) + ".") */
    @:static @(Model.Name)* _@(Model.Values[i].MemberName) = @@"@(Model.Values[i].SerializedName)";
    @EmptyLine
    @:+ (@(Model.Name)*) @(Model.Values[i].MemberName) {
    @:    return _@(Model.Values[i].MemberName);
    @:}
    @EmptyLine
}
@:@@end
}
else
{
<text>
public final class @(Model.Name) extends ExpandableStringEnum<@(Model.Name)> {
@for (int i = 0; i < Model.Values.Count; i++)
{
@:    /** Static value @(Model.Values[i].SerializedName) for @(Model.Name). */
@:    public static final @(Model.Name) @(Model.Values[i].MemberName) = fromString("@(Model.Values[i].SerializedName)");
@EmptyLine
}
    /**
     * Creates or finds a @(Model.Name) from its string representation.
     * @@param name a name to look for
     * @@return the corresponding @(Model.Name)
     */
    @@JsonCreator
    public static @(Model.Name) fromString(String name) {
        return fromString(name, @(Model.Name).class);
    }
@EmptyLine
    /**
     * @@return known @(Model.Name) values
     */
    public static Collection<@(Model.Name)> values() {
        return values(@(Model.Name).class);
    }
}
</text>
}