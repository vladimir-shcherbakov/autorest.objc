@using System.Linq
@using AutoRest.ObjectiveC
@inherits AutoRest.Core.Template<AutoRest.ObjectiveC.Model.EnumTypeOc>
/**
@Header(" * ").TrimMultilineHeader()
 */
@EmptyLine
#import "@(Model.Name).h"
@EmptyLine
/**
 * Defines values for @(Model.Name).
 */
@*@if (!Model.ModelAsString)*@
@{
    var serializedNames = Model.Values.Select(v => $"@\"{v.SerializedName}\"");
    var serializedNamesJoined = string.Join(",\n", serializedNames);

@:@@implementation @(Model.Name)
@EmptyLine
    @:+ (NSArray*)values {
        @EmptyLine
        @:static NSArray *allValues;
        @:static dispatch_once_t onceToken;
        @:dispatch_once(&onceToken, ^{
            @:allValues = @@[ 
                @:@serializedNamesJoined
            @:];
        @:});
        @EmptyLine
        @:return allValues;
    @:}
    @EmptyLine

    for (var i = 0; i < Model.Values.Count; i++)
    {
    @:/** @((Model.Values[i].Description != null ? Model.Values[i].Description.TrimEnd(new char[] {'.'}) : "Enum value " + Model.Values[i].SerializedName) + ".") */
    @:static @(Model.Name) *_@(Model.Values[i].MemberName) = (@(Model.Name)*)@@"@(Model.Values[i].SerializedName)";
    @EmptyLine
    @:+ (@(Model.Name)*)@(Model.Values[i].MemberName) {
    @:    return _@(Model.Values[i].MemberName);
    @:}
    @EmptyLine
    }
    @:+ (@(Model.Name) *)fromString:(NSString *)string {
        @:return (@(Model.Name) *) string;
    @:}
    @EmptyLine
    @:+ (NSString *)toStringValue:(id<StringEnum>)value {
        if (!Model.ModelAsString)
		{
        @:if (![[@(Model.Name) values] containsObject:value]) {
            @:@@throw [NSException exceptionWithName:@@"EnumCastException" reason:@@"Enum value doesn't exist" userInfo:nil];
        @:}
		}
        @EmptyLine
        @:return (NSString *) value;
    @:}
    @EmptyLine
@:@@end
}